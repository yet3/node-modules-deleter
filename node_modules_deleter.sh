#!/bin/bash

usage() {
	echo "Recursively remove node_modules directories"
	echo ""
	echo "Usage: $0 [options] path"
	echo ""
	echo "Options:"
	echo "  -d, --depth        <number>    Specify how deep in the file tree the script should search      (default: 5) (min: 1)"
	echo "  -abs, --absolute   <flag>      Display found node_modules paths using absolute paths"
	echo "  -y, --yes          <flag>      Skip confirmation prompts"
	echo "  -cmd, --delete-cmd <string>    Specify the command used for deletion                           (default: rm -rf)"
	echo "  -ex, --exclude     <string>    Paths to exclude, can be used multiple times for multiple paths"
	echo "                                 (example: $0 -ex ./dir_1 -ex ./dir_3 .)"
	echo ""
}

panic() {
	echo "$1 failed to execute!"
	echo "Error: $1"
	echo "Run $0 --help to see usage"
	exit 1
}

depth=5
absolute=false
yes=false
exclude=()
starting_path=""
delete_cmd="rm -rf"

while [[ $# -gt 0 ]]; do
	if [[ $1 = "-h" ||  $1 = "--help" ]]; then
		usage
		exit 0
	elif [[ $1 = "-y" || $1 = "--yes" ]]; then
		yes=true
	elif [[ $1 = "-abs" || $1 = "--absolute" ]]; then
		absolute=true
	elif [[ $1 = "-d" || $1 = "--depth" ]]; then
		depth=$2
	elif [[ $1 = "-ex" || $1 = "--exclude" ]]; then
		exclude+=($2)
	elif [[ $1 = "-cmd" || $1 = "--delete-cmd" ]]; then
		delete_cmd=$2
	elif [[ -z $2 ]]; then
		starting_path=$1
	fi

	if [[ -n "$1" && $1 = "--"* ]]; then
		shift
	fi
	shift
done

if [[ -z $starting_path ]]; then
	panic "path must be specified"
elif [[ $depth -le 0 ]]; then
	panic "--depth must be bigger then 0"
fi

is_excluded() {
	local path=$(echo "$1" | tr -s /)
	path=${path%*/}

	for matchPath in "${exclude[@]}"; do
		matchPath=${matchPath%*/}

		if [[ "$path" = "$matchPath"/* || "$path" = "$matchPath" ]]; then
			return 0
		fi
	done
	return 1
}

found_node_modules=()
find_in_dir() {
	if [[ $2 -ge $((depth)) ]]; then
		return
	fi

	if is_excluded $1; then
		return
	fi

	if [[ -d "$1/node_modules" ]]; then
		found_node_modules+=("$1/node_modules")
	fi

	for dir in $1/*/; do
		if [[ -d "$dir" && "$dir" != *"node_modules"* ]]; then
			find_in_dir ${dir%*/} $(($2 + 1))
		fi
	done
}

find_in_dir $starting_path 0

if [ ${#found_node_modules[@]} -eq 0 ]; then
	echo "Found no node_modules to remove"
	exit 0
fi

echo "Found ${#found_node_modules[@]} directories:"
for path in ${found_node_modules[@]}; do
	path=${path//\/\//\/}
	if [[ $absolute = true ]]; then
		echo "$(pwd)/${path:2}"
	else
		echo $path
	fi
done

yes_or_no="n"
if [[ $yes = true ]]; then
	yes_or_no="y"
else
	echo ""
	echo "Remove directories with command: $delete_cmd"
	read -p "Are you sure you want to proceed? [y/n]: " yes_or_no
fi

dirs_removed=0
if [[ "$yes_or_no" = "y" ]]; then
	for path in ${found_node_modules[@]}; do
		eval "$delete_cmd $path"
		((dirs_removed++))
	done
	echo ""
	echo "Removed $dirs_removed directories"
else 
	echo ""
	echo "Operation aborted!"
fi
